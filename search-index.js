var N = null;var searchIndex = {};
searchIndex["bidir_map"]={"doc":"Bidirectional maps for Rust.","items":[[3,"BidirMap","bidir_map","A bidirectional map.",N,N],[3,"ByFirst","","Wrapper type for getting second keys/values with first keys/values via `Index`.",N,N],[12,"0","","",0,N],[3,"BySecond","","Wrapper type for getting second keys/values with first keys/values via `Index`.",N,N],[12,"0","","",1,N],[3,"Iter","","An iterator over the K/V pairs contained in a `BidirMap`.",N,N],[3,"IterMut","","An iterator over mutable K/V pairs contained in a `BidirMap`.",N,N],[3,"FirstColumn","","An iterator the first set of K/Vs in a `BidirMap`.",N,N],[3,"SecondColumn","","An iterator the second set of K/Vs in a `BidirMap`.",N,N],[11,"new","","Create a new empty instance of `BidirMap`",2,[[],["self"]]],[11,"with_capacity","","Create a new empty instance of `BidirMap` with the specified capacity.",2,[[["usize"]],["self"]]],[11,"clear","","Clears the map, removing all entries.",2,[[["self"]]]],[11,"insert","","Inserts a K/V-K/V pair into the map.",2,[[["self"],["kv1"],["kv2"]],["option"]]],[11,"iter","","Gets an iterator over the entries of the map.",2,[[["self"]],["iter"]]],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",2,[[["self"]],["itermut"]]],[11,"first_col","","Gets an iterator over the first K/V of the map.",2,[[["self"]],["firstcolumn"]]],[11,"second_col","","Gets an iterator over the second K/V of the map.",2,[[["self"]],["secondcolumn"]]],[11,"len","","Returns the number of elements in the map.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[["self"]],["bool"]]],[11,"get_by_first","","Returns a reference to the second K/V corresponding to the first K/V.",2,[[["self"],["q"]],["option"]]],[11,"get_by_second","","Returns a reference to the first K/V corresponding to the second K/V.",2,[[["self"],["q"]],["option"]]],[11,"contains_first_key","","Check if the map contains the first K/V",2,[[["self"],["q"]],["bool"]]],[11,"contains_second_key","","Check if the map contains the second K/V",2,[[["self"],["q"]],["bool"]]],[11,"get_mut_by_first","","Returns a mutable reference to the second K/V corresponding to the first K/V.",2,[[["self"],["q"]],["option"]]],[11,"get_mut_by_second","","Returns a mutable reference to the first K/V corresponding to the second K/V.",2,[[["self"],["q"]],["option"]]],[11,"remove_by_first","","Removes the pair corresponding to the first K/V from the map, returning it if the key was previously in the map.",2,[[["self"],["q"]],["option"]]],[11,"remove_by_second","","Removes the pair corresponding to the first K/V from the map, returning it if the key was previously in the map.",2,[[["self"],["q"]],["option"]]],[14,"bidir_map","","Create a `BidirMap` from a set of K/V-K/V pairs.",N,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"into_iter","","",2,[[["self"]],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[["self"]],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,N],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"into_iter","","",3,[[["self"]],["i"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"into_iter","","",4,[[["self"]],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"into_iter","","",5,[[["self"]],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"into_iter","","",6,[[["self"]],["i"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["bidirmap"]]],[11,"clone","","",0,[[["self"]],["byfirst"]]],[11,"clone","","",1,[[["self"]],["bysecond"]]],[11,"extend","","",2,[[["self"],["t"]]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"partial_cmp","","",0,[[["self"],["byfirst"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["byfirst"]],["bool"]]],[11,"le","","",0,[[["self"],["byfirst"]],["bool"]]],[11,"gt","","",0,[[["self"],["byfirst"]],["bool"]]],[11,"ge","","",0,[[["self"],["byfirst"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["bysecond"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["bysecond"]],["bool"]]],[11,"le","","",1,[[["self"],["bysecond"]],["bool"]]],[11,"gt","","",1,[[["self"],["bysecond"]],["bool"]]],[11,"ge","","",1,[[["self"],["bysecond"]],["bool"]]],[11,"default","","",2,[[],["bidirmap"]]],[11,"eq","","",2,[[["self"],["bidirmap"]],["bool"]]],[11,"ne","","",2,[[["self"],["bidirmap"]],["bool"]]],[11,"eq","","",0,[[["self"],["byfirst"]],["bool"]]],[11,"ne","","",0,[[["self"],["byfirst"]],["bool"]]],[11,"eq","","",1,[[["self"],["bysecond"]],["bool"]]],[11,"ne","","",1,[[["self"],["bysecond"]],["bool"]]],[11,"into_iter","","",2,N],[11,"cmp","","",0,[[["self"],["byfirst"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["bysecond"]],["ordering"]]],[11,"hash","","",2,N],[11,"hash","","",0,N],[11,"hash","","",1,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"index","","",2,N],[11,"index","","",2,N],[11,"index","","",2,N],[11,"index","","",2,N],[11,"from_iter","","",2,[[["t"]],["self"]]]],"paths":[[3,"ByFirst"],[3,"BySecond"],[3,"BidirMap"],[3,"Iter"],[3,"IterMut"],[3,"FirstColumn"],[3,"SecondColumn"]]};
searchIndex['bidir_map']={"items":[[3,"BidirMap","bidir_map","A bidirectional map.",N,N],[3,"Iter","","",N,N],[3,"IterMut","","",N,N],[3,"FirstColumn","","",N,N],[3,"SecondColumn","","",N,N],[11,"eq","","",0,{"inputs":[{"name":"bidirmap"},{"name":"bidirmap"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"bidirmap"},{"name":"bidirmap"}],"output":{"name":"bool"}}],[11,"hash","","",0,N],[11,"fmt","","",0,{"inputs":[{"name":"bidirmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"bidirmap"}}],[11,"new","","Create a new empty instance of `BidirMap`",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"self"}}],[11,"clear","","Clears the map, removing all entries.",0,{"inputs":[{"name":"bidirmap"}],"output":N}],[11,"insert","","Inserts a K/V-K/V pair into the map.",0,{"inputs":[{"name":"bidirmap"},{"name":"kv1"},{"name":"kv2"}],"output":{"name":"option"}}],[11,"iter","","Gets an iterator over the entries of the map.",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map.",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"itermut"}}],[11,"first_col","","Gets an iterator over the first K/V of the map.",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"firstcolumn"}}],[11,"second_col","","Gets an iterator over the second K/V of the map.",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"secondcolumn"}}],[11,"len","","Returns the number of elements in the map.",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"bool"}}],[11,"get_by_first","","Returns a reference to the first K/V corresponding to the second K/V.",0,{"inputs":[{"name":"bidirmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"get_by_second","","Returns a reference to the first K/V corresponding to the second K/V.",0,{"inputs":[{"name":"bidirmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_first_key","","Check if the map contains the first K/V",0,{"inputs":[{"name":"bidirmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"contains_second_key","","Check if the map contains the second K/V",0,{"inputs":[{"name":"bidirmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut_by_first","","Returns a mutable reference to the second K/V corresponding to the first K/V.",0,{"inputs":[{"name":"bidirmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"get_mut_by_second","","Returns a mutable reference to the first K/V corresponding to the second K/V.",0,{"inputs":[{"name":"bidirmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"remove_by_first","","Removes the pair corresponding to the first K/V from the map, returning it if the key was previously in the map.",0,{"inputs":[{"name":"bidirmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"remove_by_second","","Removes the pair corresponding to the first K/V from the map, returning it if the key was previously in the map.",0,{"inputs":[{"name":"bidirmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"into_iter","","",0,{"inputs":[{"name":"bidirmap"}],"output":{"name":"intoiter"}}],[11,"from_iter","","",0,{"inputs":[{"name":"bidirmap"},{"name":"t"}],"output":{"name":"self"}}],[11,"extend","","",0,{"inputs":[{"name":"bidirmap"},{"name":"t"}],"output":N}],[11,"next","","",1,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",2,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",3,{"inputs":[{"name":"firstcolumn"}],"output":{"name":"option"}}],[11,"next","","",4,{"inputs":[{"name":"secondcolumn"}],"output":{"name":"option"}}]],"paths":[[3,"BidirMap"],[3,"Iter"],[3,"IterMut"],[3,"FirstColumn"],[3,"SecondColumn"]]};
initSearch(searchIndex);
